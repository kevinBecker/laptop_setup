#echo "Sourcing .moos_setup"

#---------------------------------
# MOOS IVP Path variables
#---------------------------------

export MOOS_IVP_KB_BASE="${HOME}/research/moos-ivp-kevinbecker"
export MOOS_IVP_SOURCE_TREE_BASE="${HOME}/research/moos-ivp/trunk"

PATH=$PATH:${MOOS_IVP_SOURCE_TREE_BASE}/bin
PATH=$PATH:${MOOS_IVP_SOURCE_TREE_BASE}/scripts
PATH=$PATH:${MOOS_IVP_SOURCE_TREE_BASE}/ivp/scripts
PATH=$PATH:${MOOS_IVP_SOURCE_TREE_BASE}/ivp/bin
PATH=$PATH:${MOOS_IVP_KB_BASE}/bin
# PATH=$PATH:~/moos-ivp-swarm/bin
# PATH=$PATH:~/moos-ivp-pavlab/bin
# PATH=$PATH:~/moos-ivp-champ/bin
# PATH=$PATH:~/moos-ivp-2680/bin
# PATH=$PATH:~/moos-ivp-aquaticus/trunk/bin
# PATH=$PATH:~/moos-ivp-ktm/bin
PATH=$PATH:${MOOS_IVP_KB_BASE}/scripts
# PATH=$PATH:~/moos-ivp-pavlab/scripts
# PATH=$PATH:~/moos-ivp-swarm/scripts
export PATH

#--------------------------------
# monte-moos Other Vars
#---------------------------------
export MONTE_MOOS_BASE_DIR="${HOME}/research/monte-moos"       # BOTH
export PATH="${PATH}:${MONTE_MOOS_BASE_DIR}/global_scripts"    # BOTH
export CARLO_DIR_LOCATION="${HOME}/research/kevin00_carlo_dir" # BOTH
source ${CARLO_DIR_LOCATION}/monte_info                        # BOTH

#--------------------------------
#MOOS IVP Other Vars
#---------------------------------

# IVP_IMAGE_DIRS
IVP_IMAGE_DIRS=~/pavlab_map_images/mit
IVP_IMAGE_DIRS+=:~/pavlab_map_images/popolopen
IVP_IMAGE_DIRS+=:~/pavlab_map_images/sydney_regatta
IVP_IMAGE_DIRS+=:~/pavlab_map_images/oak_island
export IVP_IMAGE_DIRS

# IVP_BEHAVIOR_DIRS
# IVP_BEHAVIOR_DIRS=~/moos-ivp-pavlab/lib
# IVP_BEHAVIOR_DIRS+=:~/moos-ivp-swarm/lib
IVP_BEHAVIOR_DIRS+=:${MOOS_IVP_KB_BASE}/lib
# IVP_BEHAVIOR_DIRS+=:~/moos-ivp-2680/lib
# IVP_BEHAVIOR_DIRS+=:~/moos-ivp-ktm/lib
# IVP_BEHAVIOR_DIRS+=:~/moos-ivp-aquaticus/trunk/lib
export IVP_BEHAVIOR_DIRS

#---------------------------------
# MOOS IVP Shortcuts
#---------------------------------

#export path_ps="~/moos-ivp-pavlab/pavlab_shorts"
#eval "source $path_ps/setup_pavlab_shorts"
# source /Users/kevinbecker/moos-ivp-aquaticus/trunk/missions/jervis-2023/aliases.txt

#---------------------------------
# SSH Shortcuts for Heron Work
#---------------------------------

alias ssha='ssh -l student2680 192.168.14.100'
alias sshb='ssh -l student2680 192.168.15.100'
alias sshc='ssh -l student2680 192.168.16.100'
alias sshd='ssh -l student2680 192.168.17.100'
alias sshe='ssh -l student2680 192.168.18.100'
alias sshf='ssh -l student2680 192.168.19.100'
alias sshm='ssh -l student2680 192.168.20.100'
alias sshn='ssh -l student2680 192.168.21.100'
#alias ssho='ssh -l student2680 192.168.22.100'
alias sshk='ssh -l student2680 192.168.2.2'

alias sshaf='ssh -l administrator 192.168.1.173'
alias sshbf='ssh -l administrator 192.168.1.174'
alias sshcf='ssh -l administrator 192.168.1.169'
alias sshdf='ssh -l administrator 192.168.1.168'
alias sshef='ssh -l administrator 192.168.1.167'
alias sshff='ssh -l administrator 192.168.1.149'
alias sshmf='ssh -l administrator 192.168.1.148'
alias sshnf='ssh -l administrator 192.168.1.147'
alias sshof='ssh -l administrator 192.168.1.146'

alias ssho='ssh oceanai.mit.edu'

alias mmcluster='mmcluster.sh'

#-------------------------------------------------------
# Some suggestions for MOOS-IvP aliases
#-------------------------------------------------------
alias cdmi='cd ~/moos-ivp'
alias cdmo='cd $MONTE_MOOS_BASE_DIR'
alias cdca='cd $CARLO_DIR_LOCATION'
alias cdaq='cd ~/moos-ivp-aquaticus/trunk'
alias cdmm='cdmi; cd ivp/missions'
alias cdmma='cdmm; cd s1_alpha'
alias cdmis='cdmi; cd ivp/src'

alias cdktm='cd ~/moos-ivp-ktm/'
alias cdkb='cd ${MOOS_IVP_KB_BASE}'
alias cdch='cd ~/moos-ivp-champ'
alias cdpav='cd ~/moos-ivp-pavlab'
alias cdsw='cd ~/moos-ivp-swarm'
alias runa='cdmma; pAntler alpha.moos'
alias relaunch='ktm; ./clean.sh; ./launch.sh'

#-------------------------------------------------------
# Misc Aliases
#-------------------------------------------------------
alias pingoe='ping oceanai.mit.edu'

#-------------------------------------------------------
# Set your Shell Prompt
#-------------------------------------------------------

export PROMPT_DIRTRIM=3

#-------------------------------------------------------
# Utility for examining the PATH variable line by line
#-------------------------------------------------------
mypath() {
  AMT=75
  for INDEX in $(seq 1 $AMT); do
    PART=$(echo $PATH | cut -d : -f $INDEX)
    if [ "${PART}" = "" ]; then
      return 0
    fi
    echo $PART
  done
}

#-------------------------------------------------------
# Utility for examining IVP_BEHAVIOR_DIR variable line by line
#-------------------------------------------------------
mydirs() {
  AMT=75
  for INDEX in $(seq 1 $AMT); do
    PART=$(echo $IVP_BEHAVIOR_DIRS | cut -d : -f $INDEX)
    if [ "${PART}" = "" ]; then
      return 0
    fi
    echo $PART
  done
}

#-------------------------------------------------------
# Utility for viewing client statuses on oceanai
#-------------------------------------------------------
if [[ "$(hostname)" == "oceanai" ]]; then

  catstat() {
    ~/setup/catstat.sh $1 $2 $3 $4
  }

  catbad() {
    # get the client name (arg or current user)
    # user=$1 #to be used in later version
    # [[ "$user" -ne "" ]] || { user=$(whoami) ; }
    # for file in /home/yodacora/monte-moos/clients/bad_jobs/*; do
    for file in $(find /home/yodacora/monte-moos/clients/bad_jobs/ -mindepth 1 -mtime -1 | sort); do
      if [[ -f "$file" ]]; then
        if [[ "$file" == *.txt && $(wc -l $file | awk '{ print $1 }') -gt 0 ]]; then
          echo "$(tput bold)$(tput setaf 1)$(basename $file)$(tput sgr0)"
          while read line; do
            [[ "$line" == "" ]] && { continue; }
            echo "  $line"
          done <$file
        fi
      fi
    done
  }
fi
#-------------------------------------------------------
# Useful setting for MacOS to prevent zsh advertisement
#-------------------------------------------------------
export BASH_SILENCE_DEPRECATION_WARNING=1
